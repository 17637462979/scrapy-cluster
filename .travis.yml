sudo: required

env:
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  # - distribution: ubuntu
  #   version: 14.04
  #   init: /sbin/init
  #   run_opts: ""

services:
  - docker

 
before_install:
   # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=docker/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible docker'

script:
  - container_id=$(mktemp)
    # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/root/scrapy-cluster:rw ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

    # trying to kill anything on 9091.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "kill -9 $(lsof -t -i:9091)"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "ansible-playbook -i ~/scrapy-cluster/ansible/travis.inventory ~/scrapy-cluster/ansible/scrapy-cluster.yml --syntax-check"'

  # Ansible install playbook.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "ansible-playbook -i ~/scrapy-cluster/ansible/travis.inventory ~/scrapy-cluster/ansible/scrapy-cluster.yml --connection=local --become"'  
  
  # Run offline and online tests
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm /bin/bash -c "virtualenv ~/sc; source ~/sc/bin/activate; pip install -r ~/scrapy-cluster/requirements.txt; cd ~/scrapy-cluster/; ./run_offline_tests.sh; ./run_online_tests.sh;"'
  
  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

  


# before_install:
# - sudo apt-get update -qq
# - sudo apt-get install -qq python-apt
# install:
# - pip install ansible
# script:
#     # Run container in detached state
#   - sudo docker run --detach --volume="${PWD}":/etc/ansible:ro ${run_opts} ${distribution}:ansible "${init}" > "${container_id}"

#     # Syntax check
#   # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook ~/scrapy-cluster/tests/test.yml --syntax-check
   
#   - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ls $(pwd); echo "---###---"; ls "$(pwd)/ansible"; 
#   - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -i $(pwd)/ansible/travis.inventory $(pwd)/ansible/scrapy-cluster.yml --syntax-check
#     # Test role
#   # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook ~/scrapy-cluster/tests/test.yml
#   # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -i /home/travis/build/knirbhay/scrapy-cluster/ansible/travis.inventory /home/travis/build/knirbhay/scrapy-cluster/ansible/scrapy-cluster.yml --connection=local --become
#   # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm virtualenv ~/sc; source ~/sc/bin/activate; pip install -r requirements.txt
#   # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm virtualenv source ~/sc/bin/activate; ./run_offline_tests.sh; ./run_online_tests.sh

#     # Idempotence test
#   # - >
#   #   sudo docker exec "$(cat ${container_id})" ansible-playbook ~/scrapy-cluster/tests/test.yml
#   #   | grep -q 'changed=0.*failed=0'
#   #   && (echo 'Idempotence test: pass' && exit 0)
#   #   || (echo 'Idempotence test: fail' && exit 1)

#     # Clean up
#   - sudo docker stop "$(cat ${container_id})"
# # script:
# # - ansible-playbook -i ansible/travis.inventory ansible/scrapy-cluster.yml --syntax-check
# # - ansible-playbook -i ansible/travis.inventory ansible/scrapy-cluster.yml --connection=local
# #   --become
# # - virtualenv ~/sc; source ~/sc/bin/activate; pip install -r requirements.txt
# # - source ~/sc/bin/activate; ./run_offline_tests.sh; ./run_online_tests.sh

# # notifications:
# #   slack:
# #     rooms:
# #       secure: nPY+SvgkOrpvU76i55bDtXPbclq7WzY2DCwOCbYNzpMMTNnlqV9uhwUc31gHdl+xO8aXf52JwuOqTZnJTi9PGuomp7qf4N4z/dz3tKdjj3ppgeDx8hcmAikiM/qoOUadA9zNvP+wHfJSK7l6LnbAZgdOAXZb77Fk5rIuRr695vg=
# #     on_success: always
# #     on_failure: always
# #     on_start: always
