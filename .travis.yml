sudo: required
env:
  - >
    container_id=$(mktemp)
    distribution=centos
    version=7
    init=/usr/lib/systemd/systemd
    run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - >
    container_id=$(mktemp)
    distribution=ubuntu
    version=14.04
    init=/sbin/init
    run_opts=""
dist: trusty
services:
  - docker
before_install:
  - sudo apt-get update
  # Pull container
  - sudo docker pull ${distribution}:${version}
  # Customize container
  - sudo docker build --rm=true --file=docker/Dockerfile.${distribution} --tag=${distribution}:ansible docker
addons:
  hosts:
  - travis-trusty
language: python
python: '2.7'
# before_install:
# - sudo apt-get update -qq
# - sudo apt-get install -qq python-apt
# install:
# - pip install ansible
script:
    # Run container in detached state
  - sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}:ansible "${init}" > "${container_id}"

    # Syntax check
  # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible/travis.inventory ansible/scrapy-cluster.yml --syntax-check
    # Test role
  # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook -i ansible/travis.inventory ansible/scrapy-cluster.yml --connection=local --become
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm virtualenv ~/sc; source ~/sc/bin/activate; pip install -r requirements.txt
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm virtualenv source ~/sc/bin/activate; ./run_offline_tests.sh; ./run_online_tests.sh

    # Idempotence test
  # - >
  #   sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
  #   | grep -q 'changed=0.*failed=0'
  #   && (echo 'Idempotence test: pass' && exit 0)
  #   || (echo 'Idempotence test: fail' && exit 1)

    # Clean up
  - sudo docker stop "$(cat ${container_id})"
# script:
# - ansible-playbook -i ansible/travis.inventory ansible/scrapy-cluster.yml --syntax-check
# - ansible-playbook -i ansible/travis.inventory ansible/scrapy-cluster.yml --connection=local
#   --become
# - virtualenv ~/sc; source ~/sc/bin/activate; pip install -r requirements.txt
# - source ~/sc/bin/activate; ./run_offline_tests.sh; ./run_online_tests.sh

# notifications:
#   slack:
#     rooms:
#       secure: nPY+SvgkOrpvU76i55bDtXPbclq7WzY2DCwOCbYNzpMMTNnlqV9uhwUc31gHdl+xO8aXf52JwuOqTZnJTi9PGuomp7qf4N4z/dz3tKdjj3ppgeDx8hcmAikiM/qoOUadA9zNvP+wHfJSK7l6LnbAZgdOAXZb77Fk5rIuRr695vg=
#     on_success: always
#     on_failure: always
#     on_start: always
